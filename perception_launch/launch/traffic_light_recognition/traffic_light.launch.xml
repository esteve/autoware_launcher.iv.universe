<?xml version="1.0"?>

<launch>

  <arg name="enable_fine_detection" default="true"/>
  <arg name="input/image" default="/sensing/camera/traffic_light/image_raw"/>
  <arg name="input/camera_info" default="/sensing/camera/traffic_light/camera_info"/>

  <!-- nodelet manager -->
  <arg name="manager" default="traffic_light_recognition_nodelet_manager"/>
  <!-- <node pkg="nodelet" exec="nodelet" name="$(var manager)" args="manager" /> -->

  <!-- compressed to raw image-->
  <node pkg="image_transport" exec="republish" name="traffic_light_image_decompressor" args="compressed in:=$(var input/image)/compressed raw out:=$(var input/image)">
  </node>


  <group if="$(var enable_fine_detection)">
    <include file="$(find-pkg-share traffic_light_map_based_detector)/launch/traffic_light_map_based_detector.launch.xml">
      <let var="input/camera_info" value="$(var input/camera_info)"/>
      <let var="output/rois" value="rough/rois"/>
    </include>
    <include file="$(find-pkg-share traffic_light_ssd_fine_detector)/launch/traffic_light_ssd_fine_detector.launch.xml">
      <let var="manager" value="$(var manager)"/>
      <let var="input/image" value="$(var input/image)"/>
      <let var="input/rois" value="rough/rois"/>
      <let var="output/rois" value="rois"/>
    </include>
  </group>

  <group unless="$(var enable_fine_detection)">
    <include file="$(find-pkg-share traffic_light_map_based_detector)/launch/traffic_light_map_based_detector.launch.xml">
      <let var="output/rois" value="rois"/>
      <let var="input/camera_info" value="$(var input/camera_info)"/>
    </include>
  </group>

  <include file="$(find-pkg-share traffic_light_visualization)/launch/traffic_light_roi_visualizer.launch.xml">
    <let var="manager" value="$(var manager)"/>
    <let var="input/image" value="$(var input/image)"/>
    <let var="input/rois" value="rois"/>
    <let var="enable_fine_detection" value="$(var enable_fine_detection)"/>
  </include>
  <include file="$(find-pkg-share traffic_light_classifier)/launch/traffic_light_classifier.launch.xml">
    <let var="manager" value="$(var manager)"/>
    <let var="input/rois" value="rois"/>
    <let var="input/image" value="$(var input/image)" />
    <let var="output/traffic_light_states" value="traffic_light_states" />
    <let var="use_gpu" value="true"/>
  </include>
</launch>
